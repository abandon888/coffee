/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader.js'
// import React, { useRef } from "react";
// import { useGLTF, useAnimations } from "@react-three/drei";

type GLTFResult = GLTF & {
  nodes: {
    [name: string]: THREE.Mesh
  }
  materials: {
    [name: string]: THREE.Material
  }
  animations: THREE.AnimationClip[]
}

export function Bird(props: any) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(
    '/Flamingo.glb'
  ) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Object_0"
          castShadow
          receiveShadow
          geometry={nodes.Object_0.geometry}
          material={materials.Material_0_COLOR_0}
          morphTargetDictionary={nodes.Object_0.morphTargetDictionary}
          morphTargetInfluences={nodes.Object_0.morphTargetInfluences}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/Flamingo.glb')
